From bfdb44047aa434c0259d17da0560463bc7c1c1d5 Mon Sep 17 00:00:00 2001
From: Stan Iliev <stani@google.com>
Date: Wed, 27 Sep 2017 11:05:29 -0400
Subject: [PATCH 001/306] Apply texture matrix to the layer canvas

Fix camera preview shown inverted. Apply texture matrix when
drawing opengl layer.

Test: Ran camera preview in message app and smart lock with face.
Ran CtsUiRenderingTestCases and CtsGraphicsTestCases tests.
Bug: 65534412
Change-Id: I3ed52a6c62921fcdfe30104dd176802ed1533fad
(cherry picked from commit 944dbf255ab9ddeb829830268b0af0961c257150)
---
 libs/hwui/pipeline/skia/LayerDrawable.cpp | 40 ++++++++++++++---------
 1 file changed, 25 insertions(+), 15 deletions(-)

diff --git a/libs/hwui/pipeline/skia/LayerDrawable.cpp b/libs/hwui/pipeline/skia/LayerDrawable.cpp
index 17438e5e1cd..5c6078d566b 100644
--- a/libs/hwui/pipeline/skia/LayerDrawable.cpp
+++ b/libs/hwui/pipeline/skia/LayerDrawable.cpp
@@ -36,22 +36,18 @@ void LayerDrawable::onDraw(SkCanvas* canvas) {
 
 bool LayerDrawable::DrawLayer(GrContext* context, SkCanvas* canvas, Layer* layer) {
     // transform the matrix based on the layer
-    int saveCount = -1;
-    if (!layer->getTransform().isIdentity()) {
-        saveCount = canvas->save();
-        SkMatrix transform;
-        layer->getTransform().copyTo(transform);
-        canvas->concat(transform);
-    }
-
+    SkMatrix layerTransform;
+    layer->getTransform().copyTo(layerTransform);
     sk_sp<SkImage> layerImage;
+    int layerWidth = layer->getWidth();
+    int layerHeight = layer->getHeight();
     if (layer->getApi() == Layer::Api::OpenGL) {
         GlLayer* glLayer = static_cast<GlLayer*>(layer);
         GrGLTextureInfo externalTexture;
         externalTexture.fTarget = glLayer->getRenderTarget();
         externalTexture.fID = glLayer->getTextureId();
-        GrBackendTexture backendTexture(glLayer->getWidth(), glLayer->getHeight(),
-                kRGBA_8888_GrPixelConfig, externalTexture);
+        GrBackendTexture backendTexture(layerWidth, layerHeight, kRGBA_8888_GrPixelConfig,
+                externalTexture);
         layerImage = SkImage::MakeFromTexture(context, backendTexture, kTopLeft_GrSurfaceOrigin,
                 kPremul_SkAlphaType, nullptr);
     } else {
@@ -62,15 +58,29 @@ bool LayerDrawable::DrawLayer(GrContext* context, SkCanvas* canvas, Layer* layer
     }
 
     if (layerImage) {
+        SkMatrix textureMatrix;
+        layer->getTexTransform().copyTo(textureMatrix);
+        //TODO: after skia bug https://bugs.chromium.org/p/skia/issues/detail?id=7075 is fixed
+        // use bottom left origin and remove flipV and invert transformations.
+        SkMatrix flipV;
+        flipV.setAll(1, 0, 0, 0, -1, 1, 0, 0, 1);
+        textureMatrix.preConcat(flipV);
+        textureMatrix.preScale(1.0f/layerWidth, 1.0f/layerHeight);
+        textureMatrix.postScale(layerWidth, layerHeight);
+        SkMatrix textureMatrixInv;
+        if (!textureMatrix.invert(&textureMatrixInv)) {
+            textureMatrixInv = textureMatrix;
+        }
+
+        SkMatrix matrix = SkMatrix::Concat(textureMatrixInv, layerTransform);
+
         SkPaint paint;
         paint.setAlpha(layer->getAlpha());
         paint.setBlendMode(layer->getMode());
         paint.setColorFilter(sk_ref_sp(layer->getColorFilter()));
-        canvas->drawImage(layerImage, 0, 0, &paint);
-    }
-    // restore the original matrix
-    if (saveCount >= 0) {
-        canvas->restoreToCount(saveCount);
+        // draw image with a shader to avoid save/restore of the matrix
+        paint.setShader(layerImage->makeShader(&matrix));
+        canvas->drawRect(SkRect::MakeWH(layerWidth, layerHeight), paint);
     }
 
     return layerImage;
-- 
2.17.1

