From 41044af186c7d954b02c2fea15d2c2988cd41f45 Mon Sep 17 00:00:00 2001
From: Charles He <qiurui@google.com>
Date: Thu, 2 Nov 2017 16:16:12 +0000
Subject: [PATCH 011/306] Revert "Suppress immersive mode cling in LockTask
 mode."

This reverts commit 29fef4329c846a4d593e2abd06c2c42596bdb1a9.

We shouldn't call into AM with WM lock held.

Bug: 68795262
Bug: 68305547
Change-Id: I4723488df4c5fa6839fd00c05bf3eb61253185f1
(cherry picked from commit 009050b505951edf83fcb4fd3e7e30ce780645ed)
---
 .../server/policy/ImmersiveModeConfirmation.java | 16 +---------------
 1 file changed, 1 insertion(+), 15 deletions(-)

diff --git a/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java b/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java
index edd2fdb1b33..c6ec287d9c6 100644
--- a/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java
+++ b/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java
@@ -52,6 +52,7 @@ import android.widget.Button;
 import android.widget.FrameLayout;
 
 import com.android.internal.R;
+import com.android.server.vr.VrManagerService;
 
 /**
  *  Helper to manage showing/hiding a confirmation prompt when the navigation bar is hidden
@@ -147,7 +148,6 @@ public class ImmersiveModeConfirmation {
                     && userSetupComplete
                     && !mVrModeEnabled
                     && !navBarEmpty
-                    && !isLockTaskModeLocked()
                     && !UserManager.isDeviceInDemoMode(mContext)) {
                 mHandler.sendEmptyMessageDelayed(H.SHOW, mShowDelayMs);
             }
@@ -156,20 +156,6 @@ public class ImmersiveModeConfirmation {
         }
     }
 
-    /**
-     * @return {@code true} if and only if the device is currently in LockTask mode managed by
-     * {@link android.app.admin.DevicePolicyManager}. Note that this differs from the screen pinning
-     * mode which is initiated by the user.
-     */
-    private boolean isLockTaskModeLocked() {
-        try {
-            return ActivityManager.getService().getLockTaskModeState()
-                    == ActivityManager.LOCK_TASK_MODE_LOCKED;
-        } catch (RemoteException e) {
-            return false;
-        }
-    }
-
     public boolean onPowerKeyDown(boolean isScreenOn, long time, boolean inImmersiveMode,
             boolean navBarEmpty) {
         if (!isScreenOn && (time - mPanicTime < mPanicThresholdMs)) {
-- 
2.17.1

