From 6012809abaccd73087c84afa0e9958d6ade6222c Mon Sep 17 00:00:00 2001
From: Adam Lesinski <adamlesinski@google.com>
Date: Tue, 23 Jan 2018 03:16:33 -0800
Subject: [PATCH 068/306] Revert "libandroidfw: Add ApplyStyle and
 SetConfiguration benchmark"

This reverts commit 62f17129a0c519fe3e591be102b1863024cea3a4.
(cherry picked from commit fae57eb4b8b86271c79facc3e884e02f5156396b)

Change-Id: I39c5fe4a3ad7b2bd6503385f92eb2e1b9979a091
---
 libs/androidfw/Android.bp                     |   1 -
 libs/androidfw/tests/AssetManager2_bench.cpp  |  59 +-----
 .../tests/AttributeResolution_bench.cpp       | 175 ------------------
 libs/androidfw/tests/BenchmarkHelpers.cpp     |  12 +-
 libs/androidfw/tests/data/basic/R.h           |   2 -
 libs/androidfw/tests/data/basic/basic.apk     | Bin 5260 -> 3124 bytes
 .../tests/data/basic/res/layout/layout.xml    |  25 ---
 .../tests/data/basic/res/values/values.xml    |  13 --
 8 files changed, 13 insertions(+), 274 deletions(-)
 delete mode 100644 libs/androidfw/tests/AttributeResolution_bench.cpp
 delete mode 100644 libs/androidfw/tests/data/basic/res/layout/layout.xml

diff --git a/libs/androidfw/Android.bp b/libs/androidfw/Android.bp
index 7c9078b164a..251b2e773cf 100644
--- a/libs/androidfw/Android.bp
+++ b/libs/androidfw/Android.bp
@@ -171,7 +171,6 @@ cc_benchmark {
 
         // Actual benchmarks.
         "tests/AssetManager2_bench.cpp",
-        "tests/AttributeResolution_bench.cpp",
         "tests/SparseEntry_bench.cpp",
         "tests/Theme_bench.cpp",
     ],
diff --git a/libs/androidfw/tests/AssetManager2_bench.cpp b/libs/androidfw/tests/AssetManager2_bench.cpp
index 437e1477296..85e8f25394e 100644
--- a/libs/androidfw/tests/AssetManager2_bench.cpp
+++ b/libs/androidfw/tests/AssetManager2_bench.cpp
@@ -81,18 +81,17 @@ static void BM_AssetManagerLoadFrameworkAssetsOld(benchmark::State& state) {
 }
 BENCHMARK(BM_AssetManagerLoadFrameworkAssetsOld);
 
-static void BM_AssetManagerGetResource(benchmark::State& state, uint32_t resid) {
-  GetResourceBenchmark({GetTestDataPath() + "/basic/basic.apk"}, nullptr /*config*/, resid, state);
+static void BM_AssetManagerGetResource(benchmark::State& state) {
+  GetResourceBenchmark({GetTestDataPath() + "/basic/basic.apk"}, nullptr /*config*/,
+                       basic::R::integer::number1, state);
 }
-BENCHMARK_CAPTURE(BM_AssetManagerGetResource, number1, basic::R::integer::number1);
-BENCHMARK_CAPTURE(BM_AssetManagerGetResource, deep_ref, basic::R::integer::deep_ref);
+BENCHMARK(BM_AssetManagerGetResource);
 
-static void BM_AssetManagerGetResourceOld(benchmark::State& state, uint32_t resid) {
-  GetResourceBenchmarkOld({GetTestDataPath() + "/basic/basic.apk"}, nullptr /*config*/, resid,
-                          state);
+static void BM_AssetManagerGetResourceOld(benchmark::State& state) {
+  GetResourceBenchmarkOld({GetTestDataPath() + "/basic/basic.apk"}, nullptr /*config*/,
+                          basic::R::integer::number1, state);
 }
-BENCHMARK_CAPTURE(BM_AssetManagerGetResourceOld, number1, basic::R::integer::number1);
-BENCHMARK_CAPTURE(BM_AssetManagerGetResourceOld, deep_ref, basic::R::integer::deep_ref);
+BENCHMARK(BM_AssetManagerGetResourceOld);
 
 static void BM_AssetManagerGetLibraryResource(benchmark::State& state) {
   GetResourceBenchmark(
@@ -197,7 +196,7 @@ BENCHMARK(BM_AssetManagerGetResourceLocales);
 static void BM_AssetManagerGetResourceLocalesOld(benchmark::State& state) {
   AssetManager assets;
   if (!assets.addAssetPath(String8(kFrameworkPath), nullptr /*cookie*/, false /*appAsLib*/,
-                           true /*isSystemAssets*/)) {
+                           false /*isSystemAssets*/)) {
     state.SkipWithError("Failed to load assets");
     return;
   }
@@ -212,44 +211,4 @@ static void BM_AssetManagerGetResourceLocalesOld(benchmark::State& state) {
 }
 BENCHMARK(BM_AssetManagerGetResourceLocalesOld);
 
-static void BM_AssetManagerSetConfigurationFramework(benchmark::State& state) {
-  std::unique_ptr<const ApkAssets> apk = ApkAssets::Load(kFrameworkPath);
-  if (apk == nullptr) {
-    state.SkipWithError("Failed to load assets");
-    return;
-  }
-
-  AssetManager2 assets;
-  assets.SetApkAssets({apk.get()});
-
-  ResTable_config config;
-  memset(&config, 0, sizeof(config));
-
-  while (state.KeepRunning()) {
-    config.sdkVersion = ~config.sdkVersion;
-    assets.SetConfiguration(config);
-  }
-}
-BENCHMARK(BM_AssetManagerSetConfigurationFramework);
-
-static void BM_AssetManagerSetConfigurationFrameworkOld(benchmark::State& state) {
-  AssetManager assets;
-  if (!assets.addAssetPath(String8(kFrameworkPath), nullptr /*cookie*/, false /*appAsLib*/,
-                           true /*isSystemAssets*/)) {
-    state.SkipWithError("Failed to load assets");
-    return;
-  }
-
-  const ResTable& table = assets.getResources(true);
-
-  ResTable_config config;
-  memset(&config, 0, sizeof(config));
-
-  while (state.KeepRunning()) {
-    config.sdkVersion = ~config.sdkVersion;
-    assets.setConfiguration(config);
-  }
-}
-BENCHMARK(BM_AssetManagerSetConfigurationFrameworkOld);
-
 }  // namespace android
diff --git a/libs/androidfw/tests/AttributeResolution_bench.cpp b/libs/androidfw/tests/AttributeResolution_bench.cpp
deleted file mode 100644
index fa300c50218..00000000000
--- a/libs/androidfw/tests/AttributeResolution_bench.cpp
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include "benchmark/benchmark.h"
-
-//#include "android-base/stringprintf.h"
-#include "androidfw/ApkAssets.h"
-#include "androidfw/AssetManager.h"
-#include "androidfw/AssetManager2.h"
-#include "androidfw/AttributeResolution.h"
-#include "androidfw/ResourceTypes.h"
-
-#include "BenchmarkHelpers.h"
-#include "data/basic/R.h"
-#include "data/styles/R.h"
-
-namespace app = com::android::app;
-namespace basic = com::android::basic;
-
-namespace android {
-
-constexpr const static char* kFrameworkPath = "/system/framework/framework-res.apk";
-constexpr const static uint32_t Theme_Material_Light = 0x01030237u;
-
-static void BM_ApplyStyle(benchmark::State& state) {
-  std::unique_ptr<const ApkAssets> styles_apk =
-      ApkAssets::Load(GetTestDataPath() + "/styles/styles.apk");
-  if (styles_apk == nullptr) {
-    state.SkipWithError("failed to load assets");
-    return;
-  }
-
-  AssetManager2 assetmanager;
-  assetmanager.SetApkAssets({styles_apk.get()});
-
-  std::unique_ptr<Asset> asset =
-      assetmanager.OpenNonAsset("res/layout/layout.xml", Asset::ACCESS_BUFFER);
-  if (asset == nullptr) {
-    state.SkipWithError("failed to load layout");
-    return;
-  }
-
-  ResXMLTree xml_tree;
-  if (xml_tree.setTo(asset->getBuffer(true), asset->getLength(), false /*copyData*/) != NO_ERROR) {
-    state.SkipWithError("corrupt xml layout");
-    return;
-  }
-
-  // Skip to the first tag.
-  while (xml_tree.next() != ResXMLParser::START_TAG) {
-  }
-
-  std::unique_ptr<Theme> theme = assetmanager.NewTheme();
-  theme->ApplyStyle(app::R::style::StyleTwo);
-
-  std::array<uint32_t, 6> attrs{{app::R::attr::attr_one, app::R::attr::attr_two,
-                                 app::R::attr::attr_three, app::R::attr::attr_four,
-                                 app::R::attr::attr_five, app::R::attr::attr_empty}};
-  std::array<uint32_t, attrs.size() * STYLE_NUM_ENTRIES> values;
-  std::array<uint32_t, attrs.size() + 1> indices;
-
-  while (state.KeepRunning()) {
-    ApplyStyle(theme.get(), &xml_tree, 0u /*def_style_attr*/, 0u /*def_style_res*/, attrs.data(),
-               attrs.size(), values.data(), indices.data());
-  }
-}
-BENCHMARK(BM_ApplyStyle);
-
-static void BM_ApplyStyleFramework(benchmark::State& state) {
-  std::unique_ptr<const ApkAssets> framework_apk = ApkAssets::Load(kFrameworkPath);
-  if (framework_apk == nullptr) {
-    state.SkipWithError("failed to load framework assets");
-    return;
-  }
-
-  std::unique_ptr<const ApkAssets> basic_apk =
-      ApkAssets::Load(GetTestDataPath() + "/basic/basic.apk");
-  if (basic_apk == nullptr) {
-    state.SkipWithError("failed to load assets");
-    return;
-  }
-
-  AssetManager2 assetmanager;
-  assetmanager.SetApkAssets({framework_apk.get(), basic_apk.get()});
-
-  ResTable_config device_config;
-  memset(&device_config, 0, sizeof(device_config));
-  device_config.language[0] = 'e';
-  device_config.language[1] = 'n';
-  device_config.country[0] = 'U';
-  device_config.country[1] = 'S';
-  device_config.orientation = ResTable_config::ORIENTATION_PORT;
-  device_config.smallestScreenWidthDp = 700;
-  device_config.screenWidthDp = 700;
-  device_config.screenHeightDp = 1024;
-  device_config.sdkVersion = 27;
-
-  Res_value value;
-  ResTable_config config;
-  uint32_t flags = 0u;
-  ApkAssetsCookie cookie =
-      assetmanager.GetResource(basic::R::layout::layoutt, false /*may_be_bag*/,
-                               0u /*density_override*/, &value, &config, &flags);
-  if (cookie == kInvalidCookie) {
-    state.SkipWithError("failed to find R.layout.layout");
-    return;
-  }
-
-  size_t len = 0u;
-  const char* layout_path =
-      assetmanager.GetStringPoolForCookie(cookie)->string8At(value.data, &len);
-  if (layout_path == nullptr || len == 0u) {
-    state.SkipWithError("failed to lookup layout path");
-    return;
-  }
-
-  std::unique_ptr<Asset> asset = assetmanager.OpenNonAsset(
-      StringPiece(layout_path, len).to_string(), cookie, Asset::ACCESS_BUFFER);
-  if (asset == nullptr) {
-    state.SkipWithError("failed to load layout");
-    return;
-  }
-
-  ResXMLTree xml_tree;
-  if (xml_tree.setTo(asset->getBuffer(true), asset->getLength(), false /*copyData*/) != NO_ERROR) {
-    state.SkipWithError("corrupt xml layout");
-    return;
-  }
-
-  // Skip to the first tag.
-  while (xml_tree.next() != ResXMLParser::START_TAG) {
-  }
-
-  std::unique_ptr<Theme> theme = assetmanager.NewTheme();
-  theme->ApplyStyle(Theme_Material_Light);
-
-  std::array<uint32_t, 92> attrs{
-      {0x0101000e, 0x01010034, 0x01010095, 0x01010096, 0x01010097, 0x01010098, 0x01010099,
-       0x0101009a, 0x0101009b, 0x010100ab, 0x010100af, 0x010100b0, 0x010100b1, 0x0101011f,
-       0x01010120, 0x0101013f, 0x01010140, 0x0101014e, 0x0101014f, 0x01010150, 0x01010151,
-       0x01010152, 0x01010153, 0x01010154, 0x01010155, 0x01010156, 0x01010157, 0x01010158,
-       0x01010159, 0x0101015a, 0x0101015b, 0x0101015c, 0x0101015d, 0x0101015e, 0x0101015f,
-       0x01010160, 0x01010161, 0x01010162, 0x01010163, 0x01010164, 0x01010165, 0x01010166,
-       0x01010167, 0x01010168, 0x01010169, 0x0101016a, 0x0101016b, 0x0101016c, 0x0101016d,
-       0x0101016e, 0x0101016f, 0x01010170, 0x01010171, 0x01010217, 0x01010218, 0x0101021d,
-       0x01010220, 0x01010223, 0x01010224, 0x01010264, 0x01010265, 0x01010266, 0x010102c5,
-       0x010102c6, 0x010102c7, 0x01010314, 0x01010315, 0x01010316, 0x0101035e, 0x0101035f,
-       0x01010362, 0x01010374, 0x0101038c, 0x01010392, 0x01010393, 0x010103ac, 0x0101045d,
-       0x010104b6, 0x010104b7, 0x010104d6, 0x010104d7, 0x010104dd, 0x010104de, 0x010104df,
-       0x01010535, 0x01010536, 0x01010537, 0x01010538, 0x01010546, 0x01010567, 0x011100c9,
-       0x011100ca}};
-
-  std::array<uint32_t, attrs.size() * STYLE_NUM_ENTRIES> values;
-  std::array<uint32_t, attrs.size() + 1> indices;
-  while (state.KeepRunning()) {
-    ApplyStyle(theme.get(), &xml_tree, 0x01010084u /*def_style_attr*/, 0u /*def_style_res*/,
-               attrs.data(), attrs.size(), values.data(), indices.data());
-  }
-}
-BENCHMARK(BM_ApplyStyleFramework);
-
-}  // namespace android
diff --git a/libs/androidfw/tests/BenchmarkHelpers.cpp b/libs/androidfw/tests/BenchmarkHelpers.cpp
index faddfe599af..a8abcb5df86 100644
--- a/libs/androidfw/tests/BenchmarkHelpers.cpp
+++ b/libs/androidfw/tests/BenchmarkHelpers.cpp
@@ -42,12 +42,10 @@ void GetResourceBenchmarkOld(const std::vector<std::string>& paths, const ResTab
   Res_value value;
   ResTable_config selected_config;
   uint32_t flags;
-  uint32_t last_ref = 0u;
 
   while (state.KeepRunning()) {
-    ssize_t block = table.getResource(resid, &value, false /*may_be_bag*/, 0u /*density*/, &flags,
-                                      &selected_config);
-    table.resolveReference(&value, block, &last_ref, &flags, &selected_config);
+    table.getResource(resid, &value, false /*may_be_bag*/, 0u /*density*/, &flags,
+                      &selected_config);
   }
 }
 
@@ -74,12 +72,10 @@ void GetResourceBenchmark(const std::vector<std::string>& paths, const ResTable_
   Res_value value;
   ResTable_config selected_config;
   uint32_t flags;
-  uint32_t last_id = 0u;
 
   while (state.KeepRunning()) {
-    ApkAssetsCookie cookie = assetmanager.GetResource(
-        resid, false /* may_be_bag */, 0u /* density_override */, &value, &selected_config, &flags);
-    assetmanager.ResolveReference(cookie, &value, &selected_config, &flags, &last_id);
+    assetmanager.GetResource(resid, false /* may_be_bag */, 0u /* density_override */, &value,
+                             &selected_config, &flags);
   }
 }
 
diff --git a/libs/androidfw/tests/data/basic/R.h b/libs/androidfw/tests/data/basic/R.h
index b7e814fea07..94a2a14ced8 100644
--- a/libs/androidfw/tests/data/basic/R.h
+++ b/libs/androidfw/tests/data/basic/R.h
@@ -34,7 +34,6 @@ struct R {
   struct layout {
     enum : uint32_t {
       main = 0x7f020000,
-      layoutt = 0x7f020001,
     };
   };
 
@@ -56,7 +55,6 @@ struct R {
       number2 = 0x7f040001,
       ref1 = 0x7f040002,
       ref2 = 0x7f040003,
-      deep_ref = 0x7f040004,
 
       // From feature
       number3 = 0x80030000,
diff --git a/libs/androidfw/tests/data/basic/basic.apk b/libs/androidfw/tests/data/basic/basic.apk
index 1733b6a1654645caf190982b31abe9255a554e35..18ef75e91dedc0c9fbb63bfc7b0b0a34b0782af7 100644
GIT binary patch
delta 644
zcmY+C%}X0$5XR?yv%7BMHraegRD#Kt7A*wZhzIclEX9)wmQ6vWJ%l7s54Mn`kXsKu
z^wLAx>9vPI1do0lJb4yM5BUd5PyHKu^qI{jsW1GPcb;c<W_Z~zPp+oVit6&Wp;Xy-
z%|y{A65^z&QE$Hg(5Tj%i<L&RN}8O&QbaIw)J8Nwa3B_kcf`kF4ZPsz)&gH!3#Klp
z(}~N!R$O^!(jh$3sDryT6cCqr%FgqOeV82#x`p;&=;PZxKDV>0c_{Os1Z30}*a1Fx
z4eG!&E3H<e6vibojN{7DJ6?-!@W1FoMLZX~n8~0}1KG-WM4L*N>8)toO}@<Pz{86~
z#2<SqndY*y&flHRZUl~0NEaLR@+y*xuC+@AMA1SvaUCHYdt;Ak+;_GQ3Q(Q_=_XHu
zZtiWEPYiObV|^4Ko}eOR1bH;9|FbyQw}pH-y~bw3_x|s?kELaY`&He9Zw6KDxt~;w
zPuzJm$-mss%HdbZr{7XNZl!1WCY9hH=_UPDaX-DByZ-}W?C9h*dzn?;j`5p}7dOcy
KAN&7|Nx>a#+D$+J

literal 5260
zcmds5d010d7QYDz31Jb9K!9i?i(;z?L=ig<O%xdmvWhLXS`$c+D2rxMHU*TAj$$ot
ztyV{vQKvF0)=!JIYC&8^sZ*h-sGp9AqE$Yr;!<$IIp^g)d0~W()%m9ff8KNMa_+h3
zoO^Tciw?Kq5h8>?l2^hZED{5+Ow;Job(#ounl4FeF#2YsrkINN+gB?bLv92Ge>Sn5
z&npNKD#zvdEOuyjzw2M^o0sLY$n7WLzXya$JRgp{aH;NO>#gnFOP^>?$E=ukc1Y;D
zZ#j=tqVh)TH@~>Kb;}P+_jrd-Su0MDsw|B>-q)=x@{OCN${*yl(!me2%D!}rsxDYk
zct8?(T2xa1Bx{EJ<Ap8Db3)x8cRnt!iVFI1$3c&~4JD1v?MWA^!d%3qUXvnHb9djD
zNwrGO!VOoZ_b>Z!?5fUHSHmJ(_SQJZ&iMS|$@WRNvOkWPe|=Qo{O_~B>@ZvvM~4f9
z&7Y3)u7mZ~f(N2|^oSGm&}$7NQq-C0CL>*-PZE<FRT<S)RaM7jhl@Fz*SVJFt;km{
z=5T`Y<0XGSe{Mrqcv#y#$+`35d$CK~<dY?P_5_55iMHQ=P_#-OYY-PbDD9VZqGR8q
zCH(V`CX^k0<agA5nN;Dfyl(3^kqqU?I{WYxEt0hgiBI_=F9)uy*+U_;I+>iMo+X*P
z)&@)#2zh-kY4gCqYk;1YAhB4&@Ol2MRhWtoMJ`r27Cz&Pw&>Oe-fdKlI5xSD_u!2O
zB+CTp0}o`#-OmYiw!Dh6KTa*FZnzVZlNVgL@xf*1afwYS-+h&H(r$m^CfoSDDw_(D
zwRJq%o18c)@`UR?*`R%%pN6b-b#?eUt4<x`Gqq+|?41Rk1Mg>*tETFfEzI?8=!ku1
z$B*$tBzCtNLbjY*Qh0UkllOK$ykJWI?1LMwW22JhuG?LwS(!Y28ei$;J!{Z5-BYz&
zbCJS%cWK;|TCemFmm6a*dlzI3DY;gZvnqSg5%+w_m9=9$+YUFzHHwQmuU4(U^UXU=
zZK|J>t~SX3(XzdG!PBQg_tDM~m1kozcOE;xqb1(7vHsf?nQjeZw%$H;{^{Y=0pWoS
z4@<H~-f(($@n;wG@G0@dTq$l5Zf_oT?e5{x7A~%gs#f&>=jGY9sedgVCzTrKdKDf!
za^k2ep-I(L)%16l3$>w-Je!39Hk)=Y&Rx<uV0q`Dw_AQGjaYGHe#f=e;9pv&x8Bs$
z9Sl8UR5*yo#PQBH#7z)L7kSR%S~rR=E|Ls8B+ua7uCN=}Ec>3jqDa%fIQ1?6)kW_r
zzHsii79`#^ab{cEz>a{;?`=C*s2u6w?OIr~^M1~z{g)EnD9Vv~j~}XkxBT&+J{lZ+
zro}}*w7y`{WUqxAn+|<6Vs*eD?j5-4W0&B6+ePp+#x2_;`%atc)|wOH6+cOy1$ke8
z{|@K7s?p!5uRCSbue;3I75@0R=}@1)<?pi@*?wyH&gx@XeGU&^aH&42?n6`3l^XJ3
z{ra<?mmk(1tWmCus=2vln{L9!m@)7FtL98aYvA$t%9x$f@?ode$oJmbRZ%wccF=+w
zmCcpyCBaX)7>wm^;mS}5hN{<K;2Fl+v8ifZ8na)0)GC!qQ>?Bf_0dG*<0m6;%}$#Y
zllA6!D^EeRz{*Ozi7XZsJM)^JMU&Ve+ycKUyExDM3HH=(TlAM9@?cPI1oXVyJS?Uk
zo}?dcm>=lpr<nsAPd?)RX$?$F9q3^Zo2L>x-~kTA3Z0Q|(kE&SzG}T85$d_v0{<|t
zIYdfMLn#1I1eHMy52ZIi0hk8Bg)arH1bBFK`M9S=5{ZP>$>Q80uC5kM><vSloVwar
z8;OX;ta`?igwHp^&y+u127qmZE91y)3CRUEk))GU;!D&djcAA-BpsB#Bmrs+z@tBY
z&m_Yj10A4C<T2(OpnM*4;Mp<9+>ru?0Wjew0X_imz-LDI(*ti!Qb5WCf10Sgum*2p
ziw^ue6WRq7XCzvXwA2Vb)gu$eX`!7DqxJBIIxr(KDoAKs0oaO1Dn-EO(JU5lXCaON
z7k~`l1Mma94F~~50;T{kU(pWC*?hoqz<R(|z}J9kz$w5*Kr^5f&<Wu4)kdQpvkA)p
z!sB705o>Gn1>nE3O(4){(+oOeCJ_kIOsNT47|U=tTCYv=Hx~g!DAZ`Rb7nvl5s4Uf
zhCf>fU<-1#Fp@2dVhe$6VKiF^Vhdwn5pl`dRINY51Q2_BU7ArlQ>$0%_3BK2!sVvV
zhG=jd30@k&^$;0~6!5=-!;K@Wfnn;=$Jp?ygt_Jj2Ngr8ABY37cH{$tZFC(|K5t`e
zMLQ8ZFEEK`wl#;Y!}`}{E9RaMW<s4{A6}#>8LdYdOY~C;l-TFj=4RFfU3;ZxK-dB2
zX6C}NFEdx)UT5fPe9>IEj^5@<!b5>Y_7oqF!+w=;KDJMB0LB&b0@sQFQZPU}@<3qP
zRCEIruS6JI#ujs2i52D_+GZ|^l{Ls{+e9d_kAt~XK+zpg)jLuCgdj3{mO*z#??e8l
zR$PY+fajtD5DicP<^b{l#eh=4SAZ%&EdbYuzX!PIj?*&mD1(L8x!7()%T|O($s)Rc
zqpx{9{Nz&o`BXb~#h_$sTE?6}eF9oW-=Qp|<vz4*L(7h|ETU!1U+iy7%l&BCj+XJ}
zhwb*X+}|uaYM?}4Z-DYezMf}*hTlk-FE2}MU*itx%{Ifl-)I;Nds(}%Kijrqh&*$?
zV*Z1vND2hnTnY?R|GLgsAJB>CJ-)k<%yV)e--tPmgyM16<YGT(suw>ODuB%WhS7Fo
z{BggU+sroO9%Jg_fmZ-tmCz2nk08-!73QHMJuk)6zN2{TgMLN(aL+OQ(5K0)y4PhN
z>@Vu~9BjfZLqA@S!|y-)8#YG_1Qvm-P#X+dqhW+8EipZH4qUhmT8*zU!x)#WGsq0d
z>82EoEI})?Xcmd0!#UInnU6~Bk1Mz>E$IcHn7S)qf7)Pj!K|boxQq1;FyG7Yh1XpL
z`|Xa`nJzkGp~CWuNOvvlN9XfPDWz&O#Ief|(87MibXUWEJX$*B2pmaWYM#FkdsE=i
zwG`mS!yfEX(9>g#(MJu1uv@+o*$V5-`dDwq?qj>B3~MwbSPuyl9nQy%2RlGWJRw;o
HQ@Qvb>2W7g

diff --git a/libs/androidfw/tests/data/basic/res/layout/layout.xml b/libs/androidfw/tests/data/basic/res/layout/layout.xml
deleted file mode 100644
index 045ede454bc..00000000000
--- a/libs/androidfw/tests/data/basic/res/layout/layout.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2018 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<Button xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/ok"
-    android:layout_width="0sp"
-    android:layout_height="fill_parent"
-    android:layout_weight="1"
-    android:layout_marginStart="2dip"
-    android:layout_marginEnd="2dip"
-    android:textAppearance="?android:attr/textAppearanceMedium"
-    android:textStyle="bold"
-    android:text="@android:string/ok" />
\ No newline at end of file
diff --git a/libs/androidfw/tests/data/basic/res/values/values.xml b/libs/androidfw/tests/data/basic/res/values/values.xml
index b3435629265..6c474596b5c 100644
--- a/libs/androidfw/tests/data/basic/res/values/values.xml
+++ b/libs/androidfw/tests/data/basic/res/values/values.xml
@@ -22,7 +22,6 @@
     <attr name="attr2" format="reference|integer" />
 
     <public type="layout" name="main" id="0x7f020000" />
-    <public type="layout" name="layout" id="0x7f020001" />
 
     <public type="string" name="test1" id="0x7f030000" />
     <string name="test1">test1</string>
@@ -44,18 +43,6 @@
     <public type="integer" name="ref2" id="0x7f040003" />
     <integer name="ref2">12000</integer>
 
-    <public type="integer" name="deep_ref" id="0x7f040004" />
-    <integer name="deep_ref">@integer/deep_ref_1</integer>
-    <integer name="deep_ref_1">@integer/deep_ref_2</integer>
-    <integer name="deep_ref_2">@integer/deep_ref_3</integer>
-    <integer name="deep_ref_3">@integer/deep_ref_4</integer>
-    <integer name="deep_ref_4">@integer/deep_ref_5</integer>
-    <integer name="deep_ref_5">@integer/deep_ref_6</integer>
-    <integer name="deep_ref_6">@integer/deep_ref_7</integer>
-    <integer name="deep_ref_7">@integer/deep_ref_8</integer>
-    <integer name="deep_ref_8">@integer/deep_ref_9</integer>
-    <integer name="deep_ref_9">100</integer>
-
     <public type="style" name="Theme1" id="0x7f050000" />
     <style name="Theme1">
         <item name="com.android.basic:attr1">100</item>
-- 
2.17.1

