From 03c319e340790ea4a80335c4aee0a17d5a217a02 Mon Sep 17 00:00:00 2001
From: Jack He <siyuanh@google.com>
Date: Wed, 20 Mar 2019 17:38:11 -0700
Subject: [PATCH 238/306] DO NOT MERGE Atoms: Add BluetoothClassicPairingEvent

* Add BluetoothClassicPairingEvent to log pairing and encryption
  related statistics

Bug: 124301137
Test: test drive with statsd
Change-Id: Idca6f6d340e03af91c5a6fb4102666d44167635b
(cherry picked from commit 6110c95184c6ca0265ebc39235ca81da21c0483d)
---
 cmds/statsd/src/atoms.proto | 40 +++++++++++++++++++++++++++++++++++--
 1 file changed, 38 insertions(+), 2 deletions(-)

diff --git a/cmds/statsd/src/atoms.proto b/cmds/statsd/src/atoms.proto
index ab9c7e81a88..8a42c604f77 100644
--- a/cmds/statsd/src/atoms.proto
+++ b/cmds/statsd/src/atoms.proto
@@ -121,8 +121,8 @@ message Atom {
         ANROccurred anr_occurred = 79;
         WTFOccurred wtf_occurred = 80;
         LowMemReported low_mem_reported = 81;
-
-
+        // 86 - 165 are not available
+        BluetoothClassicPairingEventReported bluetooth_classic_pairing_event_reported = 166;
     }
 
     // Pulled events will start at field 10000.
@@ -1007,6 +1007,42 @@ message BluetoothConnectionStateChanged {
     optional int32 bt_profile = 3;
 }
 
+/**
+ * Logs there is an event related Bluetooth classic pairing
+ *
+ * Logged from:
+ *     system/bt
+ */
+message BluetoothClassicPairingEventReported {
+    // An identifier that can be used to match events for this device.
+    // Currently, this is a salted hash of the MAC address of this Bluetooth device.
+    // Salt: Randomly generated 256 bit value
+    // Hash algorithm: HMAC-SHA256
+    // Size: 32 byte
+    // Default: null or empty if the device identifier is not known
+    // Note: string is here for backward compatibility purpose only
+    optional string obfuscated_id = 1;
+    // Connection handle of this connection if available
+    // Range: 0x0000 - 0x0EFF (12 bits)
+    // Default: 0xFFFF if the handle is unknown
+    optional int32 connection_handle = 2;
+    // HCI command associated with this event
+    // Default: CMD_UNKNOWN
+    optional int32 hci_cmd = 3;
+    // HCI event associated with this event
+    // Default: EVT_UNKNOWN
+    optional int32 hci_event = 4;
+    // HCI command status code if this is triggered by hci_cmd
+    // Default: STATUS_UNKNOWN
+    optional int32 cmd_status = 5;
+    // HCI reason code associated with this event
+    // Default: STATUS_UNKNOWN
+    optional int32 reason_code = 6;
+    // A status value related to this specific event
+    // Default: 0
+    optional int64 event_value = 7;
+}
+
 /**
  * Logs when something is plugged into or removed from the USB-C connector.
  *
-- 
2.17.1

