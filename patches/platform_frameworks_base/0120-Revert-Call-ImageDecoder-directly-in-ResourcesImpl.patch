From 4e764ab27128add72e565546334afaf47941f01a Mon Sep 17 00:00:00 2001
From: Leon Scroggins <scroggo@google.com>
Date: Thu, 8 Feb 2018 21:14:32 +0000
Subject: [PATCH 120/306] Revert "Call ImageDecoder directly in ResourcesImpl"

This reverts commit 40c59fdef0087ea0325e447ae0ee113cc8ca7c15.

Reason for revert: b/73083791

Change-Id: I044e534be07c5fd18c99dcc65a14b72eaf1fecd5
(cherry picked from commit 0f05b4895d0e09eb0c59065c30dd04bb884a1983)
---
 .../android/content/res/ResourcesImpl.java    | 11 +---
 .../java/android/graphics/ImageDecoder.java   | 65 ++-----------------
 2 files changed, 8 insertions(+), 68 deletions(-)

diff --git a/core/java/android/content/res/ResourcesImpl.java b/core/java/android/content/res/ResourcesImpl.java
index 00e4841044c..97cb78bc424 100644
--- a/core/java/android/content/res/ResourcesImpl.java
+++ b/core/java/android/content/res/ResourcesImpl.java
@@ -27,11 +27,9 @@ import android.annotation.StyleRes;
 import android.annotation.StyleableRes;
 import android.content.pm.ActivityInfo;
 import android.content.pm.ActivityInfo.Config;
-import android.content.res.AssetManager.AssetInputStream;
 import android.content.res.Configuration.NativeConfig;
 import android.content.res.Resources.NotFoundException;
 import android.graphics.Bitmap;
-import android.graphics.ImageDecoder;
 import android.graphics.Typeface;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
@@ -811,13 +809,8 @@ public class ResourcesImpl {
                 } else {
                     final InputStream is = mAssets.openNonAsset(
                             value.assetCookie, file, AssetManager.ACCESS_STREAMING);
-                    AssetInputStream ais = (AssetInputStream) is;
-                    // ImageDecoder will close the input stream.
-                    ImageDecoder.Source src = new ImageDecoder.AssetInputStreamSource(ais,
-                            wrapper, value);
-                    dr = ImageDecoder.decodeDrawable(src, (decoder, info, s) -> {
-                        decoder.setAllocator(ImageDecoder.ALLOCATOR_SOFTWARE);
-                    });
+                    dr = Drawable.createFromResourceStream(wrapper, value, is, file, null);
+                    is.close();
                 }
             } finally {
                 stack.pop();
diff --git a/graphics/java/android/graphics/ImageDecoder.java b/graphics/java/android/graphics/ImageDecoder.java
index 3cca47b47a5..acefead785c 100644
--- a/graphics/java/android/graphics/ImageDecoder.java
+++ b/graphics/java/android/graphics/ImageDecoder.java
@@ -25,7 +25,7 @@ import android.annotation.Nullable;
 import android.annotation.RawRes;
 import android.content.ContentResolver;
 import android.content.res.AssetFileDescriptor;
-import android.content.res.AssetManager.AssetInputStream;
+import android.content.res.AssetManager;
 import android.content.res.Resources;
 import android.graphics.drawable.AnimatedImageDrawable;
 import android.graphics.drawable.Drawable;
@@ -263,63 +263,6 @@ public final class ImageDecoder implements AutoCloseable {
         }
     }
 
-    /**
-     * Takes ownership of the AssetInputStream.
-     *
-     * @hide
-     */
-    public static class AssetInputStreamSource extends Source {
-        public AssetInputStreamSource(@NonNull AssetInputStream ais,
-                @NonNull Resources res, @NonNull TypedValue value) {
-            mAssetInputStream = ais;
-            mResources = res;
-
-            if (value.density == TypedValue.DENSITY_DEFAULT) {
-                mDensity = DisplayMetrics.DENSITY_DEFAULT;
-            } else if (value.density != TypedValue.DENSITY_NONE) {
-                mDensity = value.density;
-            } else {
-                mDensity = Bitmap.DENSITY_NONE;
-            }
-        }
-
-        private AssetInputStream mAssetInputStream;
-        private final Resources  mResources;
-        private final int        mDensity;
-
-        @Override
-        public Resources getResources() { return mResources; }
-
-        @Override
-        public int getDensity() {
-            return mDensity;
-        }
-
-        @Override
-        public ImageDecoder createImageDecoder() throws IOException {
-            ImageDecoder decoder = null;
-            synchronized (this) {
-                if (mAssetInputStream == null) {
-                    throw new IOException("Cannot reuse AssetInputStreamSource");
-                }
-                AssetInputStream ais = mAssetInputStream;
-                mAssetInputStream = null;
-                try {
-                    long asset = ais.getNativeAsset();
-                    decoder = nCreate(asset);
-                } finally {
-                    if (decoder == null) {
-                        IoUtils.closeQuietly(ais);
-                    } else {
-                        decoder.mInputStream = ais;
-                        decoder.mOwnsInputStream = true;
-                    }
-                }
-                return decoder;
-            }
-        }
-    }
-
     private static class ResourceSource extends Source {
         ResourceSource(@NonNull Resources res, int resId) {
             mResources = res;
@@ -353,7 +296,11 @@ public final class ImageDecoder implements AutoCloseable {
                     mResDensity = value.density;
                 }
 
-                long asset = ((AssetInputStream) is).getNativeAsset();
+                if (!(is instanceof AssetManager.AssetInputStream)) {
+                    // This should never happen.
+                    throw new RuntimeException("Resource is not an asset?");
+                }
+                long asset = ((AssetManager.AssetInputStream) is).getNativeAsset();
                 decoder = nCreate(asset);
             } finally {
                 if (decoder == null) {
-- 
2.17.1

