From 77b62b24c6d386f7913bfe16e1ab121404c3b50a Mon Sep 17 00:00:00 2001
From: jackqdyulei <jackqdyulei@google.com>
Date: Tue, 19 Jun 2018 16:52:07 -0700
Subject: [PATCH 31/71] Update PBAP info for all pairing dialogs. DO NOT MERGE

This is a bug from ag/4210612, in which it only update PBAP info
for USER_ENTRY_DIALOG. So in other kind of dialogs it never upload
correct PBAP info to bluetooth backend.

This CL fix it by updating PBAP for all dialogs.

Change-Id: Ia39eee1acaece555e8e5a305ec2c803294d7efbd
Bug: 109842273
Bug: 72872376
Test: RunSettingsRoboTests
(cherry picked from commit 7015e20a554fd7f8f7ded7359a5ecc13a82a0464)
---
 .../bluetooth/BluetoothPairingController.java | 22 ++++---
 .../BluetoothPairingControllerTest.java       | 66 +++++++++++++++++++
 2 files changed, 80 insertions(+), 8 deletions(-)
 create mode 100644 tests/robotests/src/com/android/settings/bluetooth/BluetoothPairingControllerTest.java

diff --git a/src/com/android/settings/bluetooth/BluetoothPairingController.java b/src/com/android/settings/bluetooth/BluetoothPairingController.java
index 5120cc0ff9..4b9ffdad4e 100644
--- a/src/com/android/settings/bluetooth/BluetoothPairingController.java
+++ b/src/com/android/settings/bluetooth/BluetoothPairingController.java
@@ -23,12 +23,16 @@ import android.text.Editable;
 import android.util.Log;
 import android.widget.CompoundButton;
 import android.widget.CompoundButton.OnCheckedChangeListener;
+
 import com.android.settings.R;
 import com.android.settings.bluetooth.BluetoothPairingDialogFragment.BluetoothPairingDialogListener;
 import com.android.settingslib.bluetooth.LocalBluetoothManager;
 import com.android.settingslib.bluetooth.LocalBluetoothProfile;
+
 import java.util.Locale;
 
+import android.support.annotation.VisibleForTesting;
+
 /**
  * A controller used by {@link BluetoothPairingDialog} to manage connection state while we try to
  * pair with a bluetooth device. It includes methods that allow the
@@ -50,8 +54,10 @@ public class BluetoothPairingController implements OnCheckedChangeListener,
 
     // Bluetooth dependencies for the connection we are trying to establish
     private LocalBluetoothManager mBluetoothManager;
-    private BluetoothDevice mDevice;
-    private int mType;
+    @VisibleForTesting
+    BluetoothDevice mDevice;
+    @VisibleForTesting
+    int mType;
     private String mUserInput;
     private String mPasskeyFormatted;
     private int mPasskey;
@@ -82,7 +88,6 @@ public class BluetoothPairingController implements OnCheckedChangeListener,
         mDeviceName = mBluetoothManager.getCachedDeviceManager().getName(mDevice);
         mPbapClientProfile = mBluetoothManager.getProfileManager().getPbapClientProfile();
         mPasskeyFormatted = formatKey(mPasskey);
-
     }
 
     @Override
@@ -96,12 +101,13 @@ public class BluetoothPairingController implements OnCheckedChangeListener,
 
     @Override
     public void onDialogPositiveClick(BluetoothPairingDialogFragment dialog) {
+        if (mPbapAllowed) {
+            mDevice.setPhonebookAccessPermission(BluetoothDevice.ACCESS_ALLOWED);
+        } else {
+            mDevice.setPhonebookAccessPermission(BluetoothDevice.ACCESS_REJECTED);
+        }
+
         if (getDialogType() == USER_ENTRY_DIALOG) {
-            if (mPbapAllowed) {
-                mDevice.setPhonebookAccessPermission(BluetoothDevice.ACCESS_ALLOWED);
-            } else {
-                mDevice.setPhonebookAccessPermission(BluetoothDevice.ACCESS_REJECTED);
-            }
             onPair(mUserInput);
         } else {
             onPair(null);
diff --git a/tests/robotests/src/com/android/settings/bluetooth/BluetoothPairingControllerTest.java b/tests/robotests/src/com/android/settings/bluetooth/BluetoothPairingControllerTest.java
new file mode 100644
index 0000000000..b28a8b2b82
--- /dev/null
+++ b/tests/robotests/src/com/android/settings/bluetooth/BluetoothPairingControllerTest.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright (C) 2018 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.settings.bluetooth;
+
+import static android.bluetooth.BluetoothDevice.PAIRING_VARIANT_CONSENT;
+
+import static org.mockito.Mockito.spy;
+import static org.mockito.Mockito.verify;
+
+import android.bluetooth.BluetoothDevice;
+import android.content.Context;
+import android.content.Intent;
+
+import com.android.settings.testutils.SettingsRobolectricTestRunner;
+import com.android.settings.testutils.shadow.ShadowBluetoothAdapter;
+import com.android.settings.testutils.shadow.ShadowBluetoothPan;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.MockitoAnnotations;
+import org.robolectric.RuntimeEnvironment;
+import org.robolectric.annotation.Config;
+
+@RunWith(SettingsRobolectricTestRunner.class)
+@Config(shadows = {ShadowBluetoothPan.class, ShadowBluetoothAdapter.class})
+public class BluetoothPairingControllerTest {
+    @Mock
+    private BluetoothDevice mBluetoothDevice;
+    private Context mContext;
+    private BluetoothPairingController mBluetoothPairingController;
+
+    @Before
+    public void setUp() {
+        MockitoAnnotations.initMocks(this);
+
+        mContext = RuntimeEnvironment.application;
+        final Intent intent = new Intent();
+        intent.putExtra(BluetoothDevice.EXTRA_DEVICE, mBluetoothDevice);
+        mBluetoothPairingController = spy(new BluetoothPairingController(intent, mContext));
+    }
+
+    @Test
+    public void onDialogPositiveClick_confirmationDialog_setPBAP() {
+        mBluetoothPairingController.mType = PAIRING_VARIANT_CONSENT;
+        mBluetoothPairingController.onCheckedChanged(null, true);
+
+        mBluetoothPairingController.onDialogPositiveClick(null);
+
+        verify(mBluetoothDevice).setPhonebookAccessPermission(BluetoothDevice.ACCESS_ALLOWED);
+    }
+}
-- 
2.17.1

